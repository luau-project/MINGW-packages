# Maintainer: luau-project <luau.project@gmail.com>

_realname=luafilesystem
pkgbase=mingw-w64-${_realname}
pkgname=("${MINGW_PACKAGE_PREFIX}-lua-${_realname}"
         "${MINGW_PACKAGE_PREFIX}-lua51-${_realname}"
         "${MINGW_PACKAGE_PREFIX}-lua53-${_realname}")
pkgver=1.8.0
pkgrel=1
arch=('any')
mingw_arch=('mingw64' 'ucrt64' 'clang64' 'clangarm64')
url='https://github.com/lunarmodules/luafilesystem'
license=('spdx:MIT')
makedepends=("${MINGW_PACKAGE_PREFIX}-cc"
             "${MINGW_PACKAGE_PREFIX}-cmake"
             "${MINGW_PACKAGE_PREFIX}-ninja"
             "${MINGW_PACKAGE_PREFIX}-lua"
             "${MINGW_PACKAGE_PREFIX}-lua51"
             "${MINGW_PACKAGE_PREFIX}-lua53"
             "${MINGW_PACKAGE_PREFIX}-pkgconf")
_tagver=$(echo ${pkgver} | sed -e "s/\./_/g")
source=("${url}/archive/refs/tags/v${_tagver}.tar.gz"
        "001-add-cmake-script-for-MSYS2-MINGW-packages.patch")
sha256sums=('16d17c788b8093f2047325343f5e9b74cccb1ea96001e45914a58bbae8932495'
            '11fa5920a43f979c1800dbce4e43a6921c9c8f1c28bfe1d21e8670b9c713dcef')

prepare() {
  cd "${_realname}-${_tagver}"

  patch -Np1 -i ${srcdir}/001-add-cmake-script-for-MSYS2-MINGW-packages.patch
}

build() {
  declare -a extra_config
  if check_option "debug" "n"; then
    extra_config+=("-DCMAKE_BUILD_TYPE=Release")
  else
    extra_config+=("-DCMAKE_BUILD_TYPE=Debug")
  fi

  # current Lua
  MSYS2_ARG_CONV_EXCL="-DCMAKE_INSTALL_PREFIX=" \
    "${MINGW_PREFIX}"/bin/cmake.exe \
      -GNinja \
      -DCMAKE_INSTALL_PREFIX="${MINGW_PREFIX}" \
      "${extra_config[@]}" \
      -DIS_CURRENT_VERSION=ON \
      -S "${_realname}-${_tagver}" \
      -B "build-${MSYSTEM}"

  "${MINGW_PREFIX}"/bin/cmake.exe --build "build-${MSYSTEM}"

  # Lua 5.1
  MSYS2_ARG_CONV_EXCL="-DCMAKE_INSTALL_PREFIX=" \
    "${MINGW_PREFIX}"/bin/cmake.exe \
      -GNinja \
      -DCMAKE_INSTALL_PREFIX="${MINGW_PREFIX}" \
      "${extra_config[@]}" \
      -DLUA_VERSION=5.1 \
      -S "${_realname}-${_tagver}" \
      -B "build-${MSYSTEM}-51"

  "${MINGW_PREFIX}"/bin/cmake.exe --build "build-${MSYSTEM}-51"

  # Lua 5.3
  MSYS2_ARG_CONV_EXCL="-DCMAKE_INSTALL_PREFIX=" \
    "${MINGW_PREFIX}"/bin/cmake.exe \
      -GNinja \
      -DCMAKE_INSTALL_PREFIX="${MINGW_PREFIX}" \
      "${extra_config[@]}" \
      -DLUA_VERSION=5.3 \
      -S "${_realname}-${_tagver}" \
      -B "build-${MSYSTEM}-53"

  "${MINGW_PREFIX}"/bin/cmake.exe --build "build-${MSYSTEM}-53"
}

check() {
  "${MINGW_PREFIX}"/bin/cmake.exe --build "build-${MSYSTEM}" --target test

  "${MINGW_PREFIX}"/bin/cmake.exe --build "build-${MSYSTEM}-51" --target test

  "${MINGW_PREFIX}"/bin/cmake.exe --build "build-${MSYSTEM}-53" --target test
}

package_lua-luafilesystem() {
  pkgdesc="File System Library for the Lua Programming Language (mingw-w64)"
  depends=("${MINGW_PACKAGE_PREFIX}-lua")

  DESTDIR="${pkgdir}" "${MINGW_PREFIX}"/bin/cmake.exe --install "build-${MSYSTEM}"

  install -Dm644 "${srcdir}/${_realname}-${_tagver}/LICENSE" "${pkgdir}${MINGW_PREFIX}/share/licenses/lua-${_realname}/LICENSE"
}

package_lua51-luafilesystem() {
  pkgdesc="File System Library for the Lua 5.1 Programming Language (mingw-w64)"
  depends=("${MINGW_PACKAGE_PREFIX}-lua51")

  DESTDIR="${pkgdir}" "${MINGW_PREFIX}"/bin/cmake.exe --install "build-${MSYSTEM}-51"

  install -Dm644 "${srcdir}/${_realname}-${_tagver}/LICENSE" "${pkgdir}${MINGW_PREFIX}/share/licenses/lua51-${_realname}/LICENSE"
}

package_lua53-luafilesystem() {
  pkgdesc="File System Library for the Lua 5.3 Programming Language (mingw-w64)"
  depends=("${MINGW_PACKAGE_PREFIX}-lua53")

  DESTDIR="${pkgdir}" "${MINGW_PREFIX}"/bin/cmake.exe --install "build-${MSYSTEM}-53"

  install -Dm644 "${srcdir}/${_realname}-${_tagver}/LICENSE" "${pkgdir}${MINGW_PREFIX}/share/licenses/lua53-${_realname}/LICENSE"
}

# generate wrappers
for _name in "${pkgname[@]}"; do
  _short="package_${_name#${MINGW_PACKAGE_PREFIX}-}"
  _func="$(declare -f "${_short}")"
  eval "${_func/#${_short}/package_${_name}}"
done
